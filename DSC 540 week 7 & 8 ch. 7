{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4a84da71",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Imports\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6fbca9df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<module 'os' from 'C:\\\\Users\\\\14029\\\\anaconda3\\\\lib\\\\os.py'>\n"
     ]
    }
   ],
   "source": [
    "##View Directory\n",
    "import os \n",
    "print(os)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "792d8c34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Internal ID</th>\n",
       "      <th>Q1: GOING OUT?</th>\n",
       "      <th>Q2: GENDER</th>\n",
       "      <th>Q3: AGE</th>\n",
       "      <th>Q4: COUNTRY</th>\n",
       "      <th>Q5: STATE, PROVINCE, COUNTY, ETC</th>\n",
       "      <th>Q6 | 100 Grand Bar</th>\n",
       "      <th>Q6 | Anonymous brown globs that come in black and orange wrappers\\t(a.k.a. Mary Janes)</th>\n",
       "      <th>Q6 | Any full-sized candy bar</th>\n",
       "      <th>Q6 | Black Jacks</th>\n",
       "      <th>...</th>\n",
       "      <th>Q8: DESPAIR OTHER</th>\n",
       "      <th>Q9: OTHER COMMENTS</th>\n",
       "      <th>Q10: DRESS</th>\n",
       "      <th>Unnamed: 113</th>\n",
       "      <th>Q11: DAY</th>\n",
       "      <th>Q12: MEDIA [Daily Dish]</th>\n",
       "      <th>Q12: MEDIA [Science]</th>\n",
       "      <th>Q12: MEDIA [ESPN]</th>\n",
       "      <th>Q12: MEDIA [Yahoo]</th>\n",
       "      <th>Click Coordinates (x, y)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>90258773</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>90272821</td>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>USA</td>\n",
       "      <td>NM</td>\n",
       "      <td>MEH</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>MEH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bottom line is Twix is really the only candy w...</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(84, 25)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90272829</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Male</td>\n",
       "      <td>49</td>\n",
       "      <td>USA</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>90272840</td>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>40</td>\n",
       "      <td>us</td>\n",
       "      <td>or</td>\n",
       "      <td>MEH</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>MEH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Raisins can go to hell</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(75, 23)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>90272841</td>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>usa</td>\n",
       "      <td>exton pa</td>\n",
       "      <td>JOY</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Friday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(70, 10)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 120 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Internal ID Q1: GOING OUT? Q2: GENDER Q3: AGE Q4: COUNTRY  \\\n",
       "0     90258773            NaN        NaN     NaN         NaN   \n",
       "1     90272821             No       Male      44        USA    \n",
       "2     90272829            NaN       Male      49         USA   \n",
       "3     90272840             No       Male      40          us   \n",
       "4     90272841             No       Male      23         usa   \n",
       "\n",
       "  Q5: STATE, PROVINCE, COUNTY, ETC Q6 | 100 Grand Bar  \\\n",
       "0                              NaN                NaN   \n",
       "1                               NM                MEH   \n",
       "2                         Virginia                NaN   \n",
       "3                               or                MEH   \n",
       "4                         exton pa                JOY   \n",
       "\n",
       "  Q6 | Anonymous brown globs that come in black and orange wrappers\\t(a.k.a. Mary Janes)  \\\n",
       "0                                                NaN                                       \n",
       "1                                            DESPAIR                                       \n",
       "2                                                NaN                                       \n",
       "3                                            DESPAIR                                       \n",
       "4                                            DESPAIR                                       \n",
       "\n",
       "  Q6 | Any full-sized candy bar Q6 | Black Jacks  ... Q8: DESPAIR OTHER  \\\n",
       "0                           NaN              NaN  ...               NaN   \n",
       "1                           JOY              MEH  ...               NaN   \n",
       "2                           NaN              NaN  ...               NaN   \n",
       "3                           JOY              MEH  ...               NaN   \n",
       "4                           JOY          DESPAIR  ...               NaN   \n",
       "\n",
       "                                  Q9: OTHER COMMENTS      Q10: DRESS  \\\n",
       "0                                                NaN             NaN   \n",
       "1  Bottom line is Twix is really the only candy w...  White and gold   \n",
       "2                                                NaN             NaN   \n",
       "3                             Raisins can go to hell  White and gold   \n",
       "4                                                NaN  White and gold   \n",
       "\n",
       "  Unnamed: 113 Q11: DAY Q12: MEDIA [Daily Dish] Q12: MEDIA [Science]  \\\n",
       "0          NaN      NaN                     NaN                  NaN   \n",
       "1          NaN   Sunday                     NaN                  1.0   \n",
       "2          NaN      NaN                     NaN                  NaN   \n",
       "3          NaN   Sunday                     NaN                  1.0   \n",
       "4          NaN   Friday                     NaN                  1.0   \n",
       "\n",
       "  Q12: MEDIA [ESPN] Q12: MEDIA [Yahoo] Click Coordinates (x, y)  \n",
       "0               NaN                NaN                      NaN  \n",
       "1               NaN                NaN                 (84, 25)  \n",
       "2               NaN                NaN                      NaN  \n",
       "3               NaN                NaN                 (75, 23)  \n",
       "4               NaN                NaN                 (70, 10)  \n",
       "\n",
       "[5 rows x 120 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Load data and view \n",
    "na_values = [\"\",\" \",None,\"Missing\",\"NA\"]\n",
    "df=pd.read_csv(\"candyhierarchy2017.csv\",encoding='latin-1',na_values=na_values)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "da9ea0ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2460, 120)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##View Shape\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f5a24c96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Internal ID                    0\n",
       "Q1: GOING OUT?               110\n",
       "Q2: GENDER                    41\n",
       "Q3: AGE                       84\n",
       "Q4: COUNTRY                   64\n",
       "                            ... \n",
       "Q12: MEDIA [Daily Dish]     2375\n",
       "Q12: MEDIA [Science]        1098\n",
       "Q12: MEDIA [ESPN]           2361\n",
       "Q12: MEDIA [Yahoo]          2393\n",
       "Click Coordinates (x, y)     855\n",
       "Length: 120, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##view Internal ID\n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4b7cda6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1: GOING OUT?</th>\n",
       "      <th>Q2: GENDER</th>\n",
       "      <th>Q3: AGE</th>\n",
       "      <th>Q4: COUNTRY</th>\n",
       "      <th>Q5: STATE, PROVINCE, COUNTY, ETC</th>\n",
       "      <th>Q6 | 100 Grand Bar</th>\n",
       "      <th>Q6 | Anonymous brown globs that come in black and orange wrappers\\t(a.k.a. Mary Janes)</th>\n",
       "      <th>Q6 | Any full-sized candy bar</th>\n",
       "      <th>Q6 | Black Jacks</th>\n",
       "      <th>Q6 | Bonkers (the candy)</th>\n",
       "      <th>...</th>\n",
       "      <th>Q8: DESPAIR OTHER</th>\n",
       "      <th>Q9: OTHER COMMENTS</th>\n",
       "      <th>Q10: DRESS</th>\n",
       "      <th>Unnamed: 113</th>\n",
       "      <th>Q11: DAY</th>\n",
       "      <th>Q12: MEDIA [Daily Dish]</th>\n",
       "      <th>Q12: MEDIA [Science]</th>\n",
       "      <th>Q12: MEDIA [ESPN]</th>\n",
       "      <th>Q12: MEDIA [Yahoo]</th>\n",
       "      <th>Click Coordinates (x, y)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Internal ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>90258773</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90272821</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>USA</td>\n",
       "      <td>NM</td>\n",
       "      <td>MEH</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>MEH</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bottom line is Twix is really the only candy w...</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(84, 25)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90272829</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Male</td>\n",
       "      <td>49</td>\n",
       "      <td>USA</td>\n",
       "      <td>Virginia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90272840</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>40</td>\n",
       "      <td>us</td>\n",
       "      <td>or</td>\n",
       "      <td>MEH</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>MEH</td>\n",
       "      <td>MEH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Raisins can go to hell</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(75, 23)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90272841</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>usa</td>\n",
       "      <td>exton pa</td>\n",
       "      <td>JOY</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>JOY</td>\n",
       "      <td>DESPAIR</td>\n",
       "      <td>MEH</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>White and gold</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Friday</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>(70, 10)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 119 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Q1: GOING OUT? Q2: GENDER Q3: AGE Q4: COUNTRY  \\\n",
       "Internal ID                                                 \n",
       "90258773               NaN        NaN     NaN         NaN   \n",
       "90272821                No       Male      44        USA    \n",
       "90272829               NaN       Male      49         USA   \n",
       "90272840                No       Male      40          us   \n",
       "90272841                No       Male      23         usa   \n",
       "\n",
       "            Q5: STATE, PROVINCE, COUNTY, ETC Q6 | 100 Grand Bar  \\\n",
       "Internal ID                                                       \n",
       "90258773                                 NaN                NaN   \n",
       "90272821                                  NM                MEH   \n",
       "90272829                            Virginia                NaN   \n",
       "90272840                                  or                MEH   \n",
       "90272841                            exton pa                JOY   \n",
       "\n",
       "            Q6 | Anonymous brown globs that come in black and orange wrappers\\t(a.k.a. Mary Janes)  \\\n",
       "Internal ID                                                                                          \n",
       "90258773                                                   NaN                                       \n",
       "90272821                                               DESPAIR                                       \n",
       "90272829                                                   NaN                                       \n",
       "90272840                                               DESPAIR                                       \n",
       "90272841                                               DESPAIR                                       \n",
       "\n",
       "            Q6 | Any full-sized candy bar Q6 | Black Jacks  \\\n",
       "Internal ID                                                  \n",
       "90258773                              NaN              NaN   \n",
       "90272821                              JOY              MEH   \n",
       "90272829                              NaN              NaN   \n",
       "90272840                              JOY              MEH   \n",
       "90272841                              JOY          DESPAIR   \n",
       "\n",
       "            Q6 | Bonkers (the candy)  ... Q8: DESPAIR OTHER  \\\n",
       "Internal ID                           ...                     \n",
       "90258773                         NaN  ...               NaN   \n",
       "90272821                     DESPAIR  ...               NaN   \n",
       "90272829                         NaN  ...               NaN   \n",
       "90272840                         MEH  ...               NaN   \n",
       "90272841                         MEH  ...               NaN   \n",
       "\n",
       "                                            Q9: OTHER COMMENTS  \\\n",
       "Internal ID                                                      \n",
       "90258773                                                   NaN   \n",
       "90272821     Bottom line is Twix is really the only candy w...   \n",
       "90272829                                                   NaN   \n",
       "90272840                                Raisins can go to hell   \n",
       "90272841                                                   NaN   \n",
       "\n",
       "                 Q10: DRESS Unnamed: 113 Q11: DAY Q12: MEDIA [Daily Dish]  \\\n",
       "Internal ID                                                                 \n",
       "90258773                NaN          NaN      NaN                     NaN   \n",
       "90272821     White and gold          NaN   Sunday                     NaN   \n",
       "90272829                NaN          NaN      NaN                     NaN   \n",
       "90272840     White and gold          NaN   Sunday                     NaN   \n",
       "90272841     White and gold          NaN   Friday                     NaN   \n",
       "\n",
       "            Q12: MEDIA [Science] Q12: MEDIA [ESPN] Q12: MEDIA [Yahoo]  \\\n",
       "Internal ID                                                             \n",
       "90258773                     NaN               NaN                NaN   \n",
       "90272821                     1.0               NaN                NaN   \n",
       "90272829                     NaN               NaN                NaN   \n",
       "90272840                     1.0               NaN                NaN   \n",
       "90272841                     1.0               NaN                NaN   \n",
       "\n",
       "            Click Coordinates (x, y)  \n",
       "Internal ID                           \n",
       "90258773                         NaN  \n",
       "90272821                    (84, 25)  \n",
       "90272829                         NaN  \n",
       "90272840                    (75, 23)  \n",
       "90272841                    (70, 10)  \n",
       "\n",
       "[5 rows x 119 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Establish dataframe\n",
    "df.set_index(['Internal ID'],inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "99f04e3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2439, 119)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Remove missing values\n",
    "df.dropna(axis=0,how='all',inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "84ba4737",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Remove duplicates\n",
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a0e2d931",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2424, 119)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop_duplicates(inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ae893530",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2424, 112)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Data cleaning columns if 50% NA\n",
    "df.dropna(thresh=df.shape[0]*0.5,how='all',axis=1,inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "31429c32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1781, 112)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Data cleaning rows if 50% NA\n",
    "df.dropna(thresh=df.shape[1]*0.5,how='all',axis=0,inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8b73a15a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['USA ', 'us', 'usa', nan, 'canada', 'Canada', 'Us', 'US', 'Murica',\n",
       "       'USA', 'uk', 'United States', 'united states', 'Usa',\n",
       "       'United staes', 'United Kingdom', 'United States of America',\n",
       "       'UAE', 'United States ', 'canada ', 'United states', 'u.s.a.',\n",
       "       'USAUSAUSA', 'america', 'france', 'United States of America ',\n",
       "       'U.S.A.', 'Mexico', 'Canada ', 'united states of america',\n",
       "       'US of A', 'UK', 'Unites States', 'The United States',\n",
       "       'North Carolina ', 'Netherlands', 'Europe', 'Earth', 'U S', 'u.s.',\n",
       "       'Costa Rica', 'The United States of America', 'cascadia',\n",
       "       'insanity lately', 'Greece', 'USA? Hard to tell anymore..',\n",
       "       \"'merica\", 'Pittsburgh', 'United State', 'France', 'U.S.', 'A',\n",
       "       'Can', 'Canae', 'New York', 'Trumpistan', 'Ireland',\n",
       "       'United Sates', 'Korea', 'Australia', 'California', 'Japan', 'USa',\n",
       "       'I pretend to be from Canada, but I am really from the United States.',\n",
       "       'Usa ', 'Iceland', 'Canada`', 'Scotland', 'Denmark', 'France ',\n",
       "       'Uk', 'Switzerland', 'Ahem....Amerca', 'South Korea', 'New Jersey',\n",
       "       'CANADA', 'United Stated', 'Germany', 'America', 'United Statss',\n",
       "       'endland', 'Atlantis', 'murrika', 'Alaska', 'united States ',\n",
       "       'germany', 'N. America', 'USSA', 'Taiwan', 'China', 'spain',\n",
       "       'U.S. ', 'Narnia', 'u s a', 'United Statea',\n",
       "       'subscribe to dm4uz3 on youtube', 'USA USA USA!!!!',\n",
       "       \"I don't know anymore\", 'Fear and Loathing'], dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Validate country info\n",
    "df['Q4: COUNTRY'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "643226a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Update country info\n",
    "df['Q4: COUNTRY'] = df['Q4: COUNTRY'].str.upper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ef4760ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['USA ', 'US', 'USA', nan, 'CANADA', 'MURICA', 'UK',\n",
       "       'UNITED STATES', 'UNITED STAES', 'UNITED KINGDOM',\n",
       "       'UNITED STATES OF AMERICA', 'UAE', 'UNITED STATES ', 'CANADA ',\n",
       "       'U.S.A.', 'USAUSAUSA', 'AMERICA', 'FRANCE',\n",
       "       'UNITED STATES OF AMERICA ', 'MEXICO', 'US OF A', 'UNITES STATES',\n",
       "       'THE UNITED STATES', 'NORTH CAROLINA ', 'NETHERLANDS', 'EUROPE',\n",
       "       'EARTH', 'U S', 'U.S.', 'COSTA RICA',\n",
       "       'THE UNITED STATES OF AMERICA', 'CASCADIA', 'INSANITY LATELY',\n",
       "       'GREECE', 'USA? HARD TO TELL ANYMORE..', \"'MERICA\", 'PITTSBURGH',\n",
       "       'UNITED STATE', 'A', 'CAN', 'CANAE', 'NEW YORK', 'TRUMPISTAN',\n",
       "       'IRELAND', 'UNITED SATES', 'KOREA', 'AUSTRALIA', 'CALIFORNIA',\n",
       "       'JAPAN',\n",
       "       'I PRETEND TO BE FROM CANADA, BUT I AM REALLY FROM THE UNITED STATES.',\n",
       "       'ICELAND', 'CANADA`', 'SCOTLAND', 'DENMARK', 'FRANCE ',\n",
       "       'SWITZERLAND', 'AHEM....AMERCA', 'SOUTH KOREA', 'NEW JERSEY',\n",
       "       'UNITED STATED', 'GERMANY', 'UNITED STATSS', 'ENDLAND', 'ATLANTIS',\n",
       "       'MURRIKA', 'ALASKA', 'N. AMERICA', 'USSA', 'TAIWAN', 'CHINA',\n",
       "       'SPAIN', 'U.S. ', 'NARNIA', 'U S A', 'UNITED STATEA',\n",
       "       'SUBSCRIBE TO DM4UZ3 ON YOUTUBE', 'USA USA USA!!!!',\n",
       "       \"I DON'T KNOW ANYMORE\", 'FEAR AND LOATHING'], dtype=object)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Q4: COUNTRY'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f68117c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "79"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##View country data info/size\n",
    "df['Q4: COUNTRY'].unique().size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f85e174d",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Clean country name for USA and varients\n",
    "usa_names_map = {\n",
    "    'USA': 'USA',\n",
    "    'USA ': 'USA',\n",
    "    'US': 'USA',\n",
    "    'UNITED STATES': 'USA',\n",
    "    'U.S.': 'USA',\n",
    "    'UNITED STATES OF AMERICA': 'USA',\n",
    "    'US OF A': 'USA',\n",
    "    'U.S.A.': 'USA',\n",
    "    'USAUSAUSA': 'USA',\n",
    "    'THE UNITED STATES':'USA',\n",
    "    'UNIED STATES': 'USA',\n",
    "    'USA! USA! USA!':'USA',\n",
    "    'USAA': 'USA',\n",
    "    'AMERICA': 'USA',\n",
    "    'UNHINGED STATES': 'USA',\n",
    "    'THE UNITED STATES OF AMERICA': 'USA', \n",
    "    'UNITE STATES': 'USA',\n",
    "    'UNITED SATES': 'USA',\n",
    "    'UNITES STATES': 'USA',\n",
    "    'UNITED STSTES': 'USA',\n",
    "    'UNITED STATES ': 'USA',\n",
    "    'UNITED STATES OF AMERICA ': 'USA',\n",
    "    'U S': 'USA',\n",
    "    'UNITED STATED': 'USA',\n",
    "    'USA USA USA!!!!': 'USA'\n",
    "}\n",
    "\n",
    "df['Q4: COUNTRY'] = df['Q4: COUNTRY'].map(usa_names_map).fillna(df['Q4: COUNTRY'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e942fc0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['USA', nan, 'CANADA', 'MURICA', 'UK', 'UNITED STAES',\n",
       "       'UNITED KINGDOM', 'UAE', 'CANADA ', 'FRANCE', 'MEXICO',\n",
       "       'NORTH CAROLINA ', 'NETHERLANDS', 'EUROPE', 'EARTH', 'COSTA RICA',\n",
       "       'CASCADIA', 'INSANITY LATELY', 'GREECE',\n",
       "       'USA? HARD TO TELL ANYMORE..', \"'MERICA\", 'PITTSBURGH',\n",
       "       'UNITED STATE', 'A', 'CAN', 'CANAE', 'NEW YORK', 'TRUMPISTAN',\n",
       "       'IRELAND', 'KOREA', 'AUSTRALIA', 'CALIFORNIA', 'JAPAN',\n",
       "       'I PRETEND TO BE FROM CANADA, BUT I AM REALLY FROM THE UNITED STATES.',\n",
       "       'ICELAND', 'CANADA`', 'SCOTLAND', 'DENMARK', 'FRANCE ',\n",
       "       'SWITZERLAND', 'AHEM....AMERCA', 'SOUTH KOREA', 'NEW JERSEY',\n",
       "       'GERMANY', 'UNITED STATSS', 'ENDLAND', 'ATLANTIS', 'MURRIKA',\n",
       "       'ALASKA', 'N. AMERICA', 'USSA', 'TAIWAN', 'CHINA', 'SPAIN',\n",
       "       'U.S. ', 'NARNIA', 'U S A', 'UNITED STATEA',\n",
       "       'SUBSCRIBE TO DM4UZ3 ON YOUTUBE', \"I DON'T KNOW ANYMORE\",\n",
       "       'FEAR AND LOATHING'], dtype=object)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Too many variations of USA like Murica and uhinged states to validate additional cleaning steps\n",
    "df['Q4: COUNTRY'].unique()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
